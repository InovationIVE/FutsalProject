// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../User/generated/user"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_USER")
}

model Account {
  accountId    Int           @id @default(autoincrement())
  refreshToken RefreshToken? @relation("refreshToken")
  email        String        @unique
  userId       String        @unique
  password     String
  cash         Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  squads       Squad[]
  ownedPlayers OwnedPlayer[]

  @@map("Account")
}

model OwnedPlayer {
  ownedPlayerId Int      @id @default(autoincrement())
  accountId     Int
  playerId      Int
  count         Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  account Account @relation(fields: [accountId], references: [accountId])
  squads  Squad[]

  @@map("OwnedPlayers")
}

model Squad {
  squadId       Int      @id @default(autoincrement())
  accountId     Int
  ownedPlayerId Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  account     Account     @relation(fields: [accountId], references: [accountId])
  ownedPlayer OwnedPlayer @relation(fields: [ownedPlayerId], references: [ownedPlayerId])

  @@map("Squad")
}

model RefreshToken {
  refreshTokenId Int      @id @default(autoincrement())
  accountId      Int      @unique
  token          String
  createdAt      DateTime @default(now())

  account Account @relation("refreshToken", fields: [accountId], references: [accountId])

  @@map("Refreshtoken")
}
