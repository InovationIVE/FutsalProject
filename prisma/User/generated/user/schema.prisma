generator client {
  provider = "prisma-client-js"
  output   = "../User/generated/user"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_USER")
}

model Account {
  accountId    Int           @id @default(autoincrement())
  email        String        @unique
  userId       String        @unique
  password     String
  cash         Int
  role         String        @default("USER")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  ownedPlayers OwnedPlayer[]
  refreshToken RefreshToken? @relation("refreshToken")
  squads       Squad[]

  @@map("Account")
}

model OwnedPlayer {
  ownedPlayerId Int      @id @default(autoincrement())
  accountId     Int
  playerId      Int
  count         Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  account       Account  @relation(fields: [accountId], references: [accountId])
  squads        Squad[]

  @@index([accountId], map: "OwnedPlayers_accountId_fkey")
  @@map("OwnedPlayers")
}

model Squad {
  squadId       Int         @id @default(autoincrement())
  accountId     Int
  ownedPlayerId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  account       Account     @relation(fields: [accountId], references: [accountId])
  ownedPlayer   OwnedPlayer @relation(fields: [ownedPlayerId], references: [ownedPlayerId])

  @@index([accountId], map: "Squad_accountId_fkey")
  @@index([ownedPlayerId], map: "Squad_ownedPlayerId_fkey")
  @@map("Squad")
}

model RefreshToken {
  refreshTokenId Int       @id @default(autoincrement())
  accountId      Int       @unique
  token          String
  expiresAt      DateTime?
  createdAt      DateTime  @default(now())
  account        Account   @relation("refreshToken", fields: [accountId], references: [accountId])

  @@map("Refreshtoken")
}
