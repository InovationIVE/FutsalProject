generator client {
  provider = "prisma-client-js"
  output   = "../User/generated/user"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_USER")
}

model Account {
  accountId    Int            @id @default(autoincrement())
  email        String         @unique
  userId       String         @unique
  password     String
  cash         Int            @default(100000) 
  lastLoginAt  DateTime?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  role         String         @default("USER")
  ownedPlayers OwnedPlayers[]
  refreshToken RefreshToken?  @relation("refreshToken")
  squad        Squad?

  @@map("Account")
}

model SquadMembers {
  id            Int          @id @default(autoincrement())
  squadId       Int
  ownedPlayerId Int
  ownedPlayer   OwnedPlayers @relation(fields: [ownedPlayerId], references: [ownedPlayerId])
  squad         Squad        @relation(fields: [squadId], references: [squadId])

  @@unique([squadId, ownedPlayerId])
  @@index([ownedPlayerId], map: "squadMembers_ownedPlayerId_fkey")
  @@map("squadMembers")
}

model OwnedPlayers {
  ownedPlayerId Int            @id @default(autoincrement())
  accountId     Int
  playerId      Int
  count         Int
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  account       Account        @relation(fields: [accountId], references: [accountId])
  squadMembers  SquadMembers[]

  @@index([accountId], map: "OwnedPlayers_accountId_fkey")
  @@map("OwnedPlayers")
}

model Squad {
  squadId      Int            @id @default(autoincrement())
  accountId    Int            @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  account      Account        @relation(fields: [accountId], references: [accountId])
  squadMembers SquadMembers[]

  @@map("Squad")
}

model RefreshToken {
  refreshTokenId Int       @id @default(autoincrement())
  accountId      Int       @unique
  token          String
  createdAt      DateTime  @default(now())
  expiresAt      DateTime?
  account        Account   @relation("refreshToken", fields: [accountId], references: [accountId])

  @@map("Refreshtoken")
}
